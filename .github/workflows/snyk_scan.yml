name: Snyk Vulnerability Scan

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
#    env:
      # we use this in env var for conditionals (secrets can't be used in conditionals)
#      AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
    steps:
      - name: Set Up Java 8
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 8

      - name: Checkout Java agent
        uses: actions/checkout@v3
        with:
          ref: 'main'

#      - name: Configure AWS Credentials
#        if: ${{ env.AWS_KEY != '' }}
#        uses: aws-actions/configure-aws-credentials@v1-node16
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-2

      - name: Setup environment
        uses: ./.github/actions/setup-environment

      - name: Set gradle.properties
        run: |
          cd ${GITHUB_WORKSPACE}/forked-newrelic-java-agent
          sed -i -e "s|jdk8=8|jdk8=${JAVA_HOME_8_x64}|
          s|jdk11=11|jdk11=${JAVA_HOME_11_x64}|
          s|jdk17=17|jdk17=${JAVA_HOME_17_x64}|" gradle.properties.gha
          mv gradle.properties.gha gradle.properties

      - name: Setup Gradle Options
        run: echo "GRADLE_OPTIONS=-Porg.gradle.java.installations.auto-detect=false - Porg.gradle.java.installations.fromEnv=JAVA_HOME_17_x64,JAVA_HOME_11_x64,JAVA_HOME_8_x64" >> $GITHUB_ENV

      - name: Build Agent
        run: ./gradlew $GRADLE_OPTIONS jar

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Java Agent
        uses: actions/checkout@master

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --all-sub-projects --org=java-agent-test --configuration-matching='(^compileClasspath$)|(^runtimeClasspath$)'